WDLF inverter
============

0) Currently in WDLF inversion the error in the magnitude is set to a fixed, constant value. That is not
   appropriate for many scenarios, such as the WDLF of a cluster, where the objects are all at the same
   distance (so that the intrinsically-faint ones are also apparently-faint) and the magnitude error of
   the fainter objects is larger. The algorithm should be updated so that the simulated WDs with fainter
   magnitudes have a larger assigned random magnitude error. I should figure out the model to use based
   on the shot noise in the flux.


2) Add WDLF (model-obs) residuals to plot
3) Add plot of chi-squared with each iteration

4) Add plot of updated progenitor mass distribution after iteration. Add plot of updated SFR model.

Better density plots -> use combination of points & hess diagram?

Move InitialGuessSFR & InitialSFRForm to sfr package, incorporate into the structure used there.


General
=======

WDLF modelling:
 - Forms should not keep a reference to the ModellingState, rather they only keep references to the objects they
   manipulate. This makes the forms more flexible as it doesn't tie them to any particular type of state object.

Merge old SSS code into the sss package; eliminate multiple old copies.

Main sequence lifetime code should not barf if we give a mass outside the range of pre-WD masses. It's the
responsibility of whatever modelling code is invoking the method to check the mass it's giving.

Tidy up test classes -> wd.cooling.test.WDTester

Add comments and javadoc